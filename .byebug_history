exit
padded_page_name
exit
"%-#{padding_size + 10}.#{line[:page_name].size}s" % line[:page_name]
"%-#{padding_size}.#{line[:page_name].size}s" % line[:page_name]
"%-#{padding_size}.#{line[:page_name].size}s"
line[:page_name].size
padding_size
padded_page_name
count_line
padded_page_name
padding_size
padded_page_name
line[:page_name]
"%-#{padding_size}.#{line[:page_name].size}s"
"/help_page/123 unique views".size
"#{padded_page_name}#{count_line}".length
"#{padded_page_name}#{count_line}"
continue
"#{padded_page_name}#{count_line}"
exit
"%-#{padding_size}.#{line[:page_name].size}s" % line[:page_name]
"%-#{padding_size}.#{line[:page_name].size}s"
exit
"%-#{line[:page_name].size}.#{padding_size + 1}s" % line[:page_name]
"%-#{line[:page_name].size}.#{padding_size}s" % line[:page_name]
raw_line_length(line)
max_line_length
"%-#{line[:page_name].size}.#{padding_size}s"
exit
continue
self.max_line_length
self
sel
max_line_length = compiled.map { |line| raw_line_length(line) }.max
compiled.map { |line| raw_line_length(line) }.max
continue
max_line_length
[A
max_line_length
continue
max_line_length
exit
compiled.map { |line| raw_line_length(line) }.max
=> 138:       max_line_lengthx = compiled.map { |line| raw_line_length(line) }.max
exit
compiled.map { |line| print_line(line).size }.max
compiled.map
exit
xit
exit
"%-#{line[:page_name].size}.#{padding_size}s"
padding_size
continue
max_line_length
max_line_length - count_line.size - line[:page_name].size
continue
max_line_length
exit
max_line_length
exit
compiled.max { |line| print_line(line).size }
max_line_length
exit
print_line(compiled[0]).size
print_line(compiled[0])
compiled.max { |line| print_line(line).size }
exit
file_exists?
exit
file_exists?
exit
file_exists?
file_name
file_name.nil?
exit
esit
exit
@file_name
@file_name,
